// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  profilename String       @unique
  password    String
  email       String       @unique
  tokens      Token[]
}

model Token {
  token      String    @id
  expiration DateTime
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Manga {
  id          Int    @id @default(autoincrement())
  title       String
  author      String
  description String

  chapters Chapter[]
  cover    Cover?    @relation("mangaCover")
}

model Cover {
  id   Int    @id @default(autoincrement())
  hash String

  mangaId Int   @unique
  manga   Manga @relation("mangaCover", fields: [mangaId], references: [id])
}

model Chapter {
  id        Int    @id @default(autoincrement())
  name      String
  pageCount Int

  pages Page[]

  mangaId Int
  manga   Manga @relation(fields: [mangaId], references: [id])
}

model Page {
  id   Int    @id @default(autoincrement())
  hash String

  chapterId Int
  chapter   Chapter @relation(fields: [chapterId], references: [id])
}

/*
model Manga {
  id    Int     @id @default(autoincrement())
  title String?
  author  String  
  description  String
  chapters Chapter[]
  cover Cover?  @relation("mangaCover")
}

model Cover {
  id Int @id @default(autoincrement())
  hash String 
  data Bytes
  mangaId Int @unique
  mimeType String
  manga Manga @relation("mangaCover", fields: [mangaId], references: [id])
}

model Chapter {
  id Int @id @default(autoincrement())
  hash String 
  pageCount Int
  Page Page[]
  mangaId Int @unique
  manga Manga @relation(fields: [mangaId], references: [id])
}

model Page {
  id Int @id @default(autoincrement())
  hash String 
  data Bytes
  chapterId Int
  mimeType String
  chapter Chapter @relation(fields: [chapterId], references: [id])
}
*/